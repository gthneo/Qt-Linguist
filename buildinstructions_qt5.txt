https://stackoverflow.com/questions/14932315/how-to-compile-qt-5-under-windows-or-linux-32-or-64-bit-static-or-dynamic-on-v
https://stackoverflow.com/questions/15826893/building-qt5-with-visual-studio-2012-visual-studio-2013-and-integrating-with/15893226#15893226

If something breaks, read this instead:
https://github.com/qbittorrent/qBittorrent/wiki/Compiling-with-MSVC-2017-x64-(static-linkage)

REQUIRED:
-Python (latest)
-Perl
-Git
-MSVC2017 (15.7.3 or newer: https://developercommunity.visualstudio.com/content/problem/76198/vs-2017-compiler-creates-broken-debug-build-using.html)
-Windows 10 SDK
-jom

With everything in the path, open MSVC2017 prompt (VS2017 Command Prompt of choice; I'm using x64_x86 Cross Tools Command Prompt for VS 2017):
$mkdir C:\Qt5
$cd C:\Qt5
$git clone https://code.qt.io/qt/qt5.git
$cd qt5
$git checkout <branch> (ex. 5.12.1, whatever)
$perl ./init-repository

Edit qmakespec (qtbase\mkspecs\common\msvc-desktop.conf)
QMAKE_CFLAGS_RELEASE    = $$QMAKE_CFLAGS_OPTIMIZE -MT
QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO += $$QMAKE_CFLAGS_OPTIMIZE -Zi -MT
QMAKE_CFLAGS_DEBUG      = -Zi -MTd

Set env vars in prompt
$set QTDIR=C:\Qt5\qt5
$set PATH=C:\Qt5\qt5\qtbase\bin;%PATH%

Build it
$configure -release -opensource -platform win32-msvc -static -nomake examples -nomake tests

Either
$nmake
or
$jom -j[number of jobs]

And now you'll have Qt5 static for MSVC2017!

Want to reconfigure?
$nmake distclean
